/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var L=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var K=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var H=(r,o)=>{for(var t in o)L(r,t,{get:o[t],enumerable:!0})},tt=(r,o,t,e)=>{if(o&&typeof o=="object"||typeof o=="function")for(let i of K(o))!z.call(r,i)&&i!==t&&L(r,i,{get:()=>o[i],enumerable:!(e=G(o,i))||e.enumerable});return r};var et=r=>tt(L({},"__esModule",{value:!0}),r);var nt={};H(nt,{default:()=>w});module.exports=et(nt);var S=require("obsidian");var l=require("obsidian");var c="json";var d="txt";var v="json",C="xml",Q="txt";var s=require("@codemirror/view"),ot=require("@codemirror/view"),_=require("@codemirror/state"),a=require("@codemirror/language"),O=require("@codemirror/commands"),E=require("@codemirror/search"),g=require("@codemirror/autocomplete"),R=require("@codemirror/lint"),P=(()=>[(0,s.lineNumbers)(),(0,s.highlightActiveLineGutter)(),(0,s.highlightSpecialChars)(),(0,O.history)(),(0,a.foldGutter)(),(0,s.drawSelection)(),(0,s.dropCursor)(),_.EditorState.allowMultipleSelections.of(!0),(0,a.indentOnInput)(),(0,a.syntaxHighlighting)(a.defaultHighlightStyle,{fallback:!0}),(0,a.bracketMatching)(),(0,g.closeBrackets)(),(0,g.autocompletion)(),(0,s.rectangularSelection)(),(0,s.crosshairCursor)(),(0,s.highlightActiveLine)(),(0,E.highlightSelectionMatches)(),s.keymap.of([...g.closeBracketsKeymap,...O.defaultKeymap,...E.searchKeymap,...O.historyKeymap,...a.foldKeymap,...g.completionKeymap,...R.lintKeymap])])();var D=require("@codemirror/view");var k=require("@lezer/lr"),p=require("@lezer/highlight"),st=(0,p.styleTags)({String:p.tags.string,Number:p.tags.number,"True False":p.tags.bool,PropertyName:p.tags.propertyName,Null:p.tags.null,",":p.tags.separator,"[ ]":p.tags.squareBracket,"{ }":p.tags.brace}),N=k.LRParser.deserialize({version:14,states:"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j",stateData:"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O",goto:"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R",nodeNames:"\u26A0 JsonText True False Null Number String } { Object Property PropertyName ] [ Array",maxTerm:25,nodeProps:[["openedBy",7,"{",12,"["],["closedBy",8,"}",13,"]"]],propSources:[st],skippedNodes:[0],repeatNodeCount:2,tokenData:"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~",tokenizers:[0],topRules:{JsonText:[0,1]},tokenPrec:0});var n=require("@codemirror/language");var rt=n.LRLanguage.define({name:"json",parser:N.configure({props:[n.indentNodeProp.add({Object:(0,n.continuedIndent)({except:/^\s*\}/}),Array:(0,n.continuedIndent)({except:/^\s*\]/})}),n.foldNodeProp.add({"Object Array":n.foldInside})]}),languageData:{closeBrackets:{brackets:["[","{",'"']},indentOnInput:/^\s*[\}\]]$/}});function j(){return new n.LanguageSupport(rt)}var b=require("@codemirror/view"),x=require("@codemirror/commands"),I=require("@codemirror/language"),Y=()=>[b.keymap.of([x.indentWithTab]),I.indentUnit.of("    ")],J=()=>[b.keymap.of([{key:"Shift-Tab",preventDefault:!0,run:x.indentLess}])];var $=require("obsidian"),X=require("@codemirror/view"),A=require("@codemirror/state"),u=class extends $.TextFileView{constructor(t,e){super(t);this.plugin=e}onload(){super.onload(),this.editorEl=this.contentEl.createDiv("datafile-source-view mod-cm6"),this.cmEditor=new X.EditorView({state:this.createDefaultEditorState(),parent:this.editorEl}),this.app.workspace.trigger("codemirror",this.cmEditor)}getViewData(){return this.cmEditor.state.doc.toString()}setViewData(t,e){this.cmEditor.dispatch({changes:{from:0,to:this.cmEditor.state.doc.length,insert:t}})}clear(){}getDisplayText(){return this.file?this.file.basename:"NOFILE"}onClose(){return super.onClose()}async reload(){this.plugin.settings.doAutosaveFiles&&await this.save(!1);let t=this.getViewData();this.cmEditor.setState(this.createDefaultEditorState()),this.setViewData(t,!1)}onEditorUpdate(t){this.plugin.settings.doAutosaveFiles&&t.docChanged&&this.requestSave()}createDefaultEditorState(){return A.EditorState.create({extensions:[...this.getCommonEditorExtensions(),...this.getEditorExtensions()]})}getCommonEditorExtensions(){let t=[];return this.plugin.settings.lineWrapping&&t.push(X.EditorView.lineWrapping),t}};var h=class extends u{constructor(o,t){super(o,t)}getViewType(){return c}getEditorExtensions(){let o;return o=[P,Y(),j(),D.EditorView.updateListener.of(this.onEditorUpdate.bind(this))],o}};var F=require("@codemirror/view");var f=class extends u{constructor(o,t){super(o,t)}getViewType(){return d}getEditorExtensions(){let o;return o=[P,J(),F.EditorView.updateListener.of(this.onEditorUpdate.bind(this))],o}};function U(r){return[...r.workspace.getLeavesOfType(c).filter(t=>t.view instanceof h),...r.workspace.getLeavesOfType(d).filter(t=>t.view instanceof f)].map(t=>t.view)}var T=class extends l.PluginSettingTab{constructor(t,e){super(t,e);this.requestReloadView=!1;this.plugin=e}display(){let{containerEl:t}=this;this.requestReloadView=!1,t.empty(),new l.Setting(t).setName("Load .txt files").addToggle(e=>e.setValue(this.plugin.settings.doLoadTxt).onChange(async i=>{this.plugin.settings.doLoadTxt=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Create .txt files").addToggle(e=>e.setValue(this.plugin.settings.doCreateTxt).onChange(async i=>{this.plugin.settings.doCreateTxt=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Load .json files").addToggle(e=>e.setValue(this.plugin.settings.doLoadJson).onChange(async i=>{this.plugin.settings.doLoadJson=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Create .json files").addToggle(e=>e.setValue(this.plugin.settings.doCreateJson).onChange(async i=>{this.plugin.settings.doCreateJson=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Load .xml files").addToggle(e=>e.setValue(this.plugin.settings.doLoadXml).onChange(async i=>{this.plugin.settings.doLoadXml=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Create .xml files").addToggle(e=>e.setValue(this.plugin.settings.doCreateXml).onChange(async i=>{this.plugin.settings.doCreateXml=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Enable autosave for files").addToggle(e=>e.setValue(this.plugin.settings.doAutosaveFiles).onChange(async i=>{this.plugin.settings.doAutosaveFiles=i,await this.plugin.saveSettings()})),new l.Setting(t).setName("Wrap long lines").addToggle(e=>e.setValue(this.plugin.settings.lineWrapping).onChange(async i=>{this.plugin.settings.lineWrapping=i,this.requestReloadView=!0,await this.plugin.saveSettings()}))}async hide(){if(this.requestReloadView){let t=U(this.app);for(let e of t)await e.reload()}}};var Z=require("obsidian"),M={join(...r){let o=r.map(t=>String(t).trim()).filter(t=>t!=null);return(0,Z.normalizePath)(o.join("/"))}};var q={doLoadTxt:!0,doCreateTxt:!0,doLoadXml:!0,doCreateXml:!0,doLoadJson:!0,doCreateJson:!0,doAutosaveFiles:!0,lineWrapping:!0};var w=class extends S.Plugin{async onload(){await this.loadSettings(),this.TryRegisterTxt(),this.tryRegisterJson(),this.tryRegisterXml(),this.addSettingTab(new T(this.app,this))}TryRegisterTxt(){this.settings.doLoadTxt&&(this.registerView(d,t=>new f(t,this)),this.registerExtensions([Q],d)),this.settings.doCreateTxt&&this.registerContextMenuCommand(Q)}tryRegisterJson(){this.settings.doLoadTxt&&(this.registerView(c,t=>new h(t,this)),this.registerExtensions([v],c)),this.settings.doCreateJson&&this.registerContextMenuCommand(v)}tryRegisterXml(){this.settings.doLoadXml&&this.registerExtensions([C],d),this.settings.doCreateXml&&this.registerContextMenuCommand(C)}onunload(){}async loadSettings(){this.settings=Object.assign({},q,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}registerContextMenuCommand(t){this.registerEvent(this.app.workspace.on("file-menu",(e,i)=>{let m=i instanceof S.TFile?i.parent:i;e.addItem(V=>{V.setTitle(`Create .${t} file`).setIcon("document").onClick(async()=>{console.log(m==null?void 0:m.path),m&&await this.createFile(m.path,t)})})}))}async createFile(t,e){let{vault:i}=this.app,{adapter:m}=i,V="Unknown",y=M.join(t,`${V}.${e}`);try{if(await m.exists(y))throw new Error(`${y} already exists`);let B=await i.create(y,"");await this.app.workspace.getLeaf(!0).openFile(B)}catch(W){console.log(W.toString())}}};

/* nosourcemap */