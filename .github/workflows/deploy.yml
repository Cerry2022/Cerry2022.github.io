name: 部署到GithubPages

on:
  # 执行 'push' 到 'master' 时触发，根据自己仓库的分支名修改
  push:
    branches: [master]
  # 允许从“操作”选项卡手动运行此工作流
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限
permissions:
  contents: read
  pages: write
  id-token: write


# 设置属于'pages'组下的工作流并发，设置后只运行首个和最新的工作流，中间等待状态的工作流将被取消
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: 安装 Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: 安装依赖
        run: pnpm install

      - name: 构建项目
        run: pnpm build
      
      - name: 调试构建目录
        run: |
          echo "检查 .vitepress/dist 是否存在："
          ls -la .vitepress/dist
      - name: 上传产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: .vitepress/dist  # 确保路径与构建输出目录一致

  # 部署到GitHub Pages
  # 需要将GitHub Pages的源设置为GitHub Actions
  deploy:
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: 部署到 GitHub Pages
        uses: actions/deploy-pages@v4