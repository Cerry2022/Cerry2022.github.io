import{_ as E,c as e,o as O,ag as D}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"public/code/未命名.md","filePath":"public/code/未命名.md"}'),I={name:"public/code/未命名.md"};function Y(X,N,R,T,p,t){return O(),e("div",null,N[0]||(N[0]=[D("<p>Lm:=64,32,&quot;ҷеħгħг×ҷǅұƤҬǄćƿҲƤҷĥЯƗǅćҭƤćÈǇƤҷƥħĝƔǅƗǄƗǅŴƒƗҷƥЯƔǅƗǄƗąƇâƗҷƥЯƔǅĻƹƗƕŷĢƔҷĥЯƔǅĻƹƗŕѭƍƤҷĥЯƔǅĤƍƗŕѬÍĻҷĥЯƔǅĤƍƗŕѬÍĻҷĥЯƔąğÝƗĕĲÍƔҷĥЯƔąğÝƗąЬƈĻҷĥЯƔƕЯƔǅÜƈƗҷąϰĻËϯĻǇϬǇƤҷǅұƤҳƤҳƤҸϵ×ϳ×ϳËӧеħгӉǅćҭƤҳǄӅǅćҭƤҳǄӅǅƗǄƗǅϮćӈǅƗǄƗǅćҭǄӅÕƸËƔǅćҭǄӅąҭƹƤćÈǇǄӅǅǄƏƗǅĄƗƗӇǅƻƋƗąććƗӇǅǄƉƗąććƗӇǅäƉƗąććƗӇąƍÌƗǅćҭǄӅÕƸËƔǅćҭǄӅǅұƤҳǄӅËϲ×ϳӈӧ&quot;};</p><p>DrawRect(G,X,Y,N) BEGIN LOCAL X1:=16*(N MOD 4),Y1:=16<em>INT(0.25</em>N); BLIT_P(G,X,Y,G1,X1,Y1,X1+16,Y1+16); END;</p><p>SearchRect(X,Y,N) BEGIN LOCAL I; FOR I FROM −1 TO 1 STEP 2 DO IF M1(Y+2,X+I+2)==N THEN 0►M1(Y+2,X+I+2);RECT_P((X+I)<em>16,Y</em>16,(X+I)<em>16+14,Y</em>16+14);SearchRect(X+I,Y,N);END; IF M1(Y+I+2,X+2)==N THEN 0►M1(Y+I+2,X+2);RECT_P(X*16,(Y+I)<em>16,X</em>16+14,(Y+I)*16+14);SearchRect(X,Y+I,N);END; END;</p><p>END;</p><p>KillRect() BEGIN LOCAL X,Y,N,I; FOR Y FROM 0 TO 7 DO FOR X FROM 0 TO 11 DO N:=M1(Y+2,X+2); IF N≠0 AND M1(Y+2,X+1)=N AND M1(Y+2,X+3)=N THEN</p><p>FOR I FROM −1 TO 1 STEP 2 DO 0►M1(Y+2,X+I+2);RECT_P((X+I)<em>16,Y</em>16,(X+I)<em>16+14,Y</em>16+14);SearchRect(X+I,Y,N);END; END;//X</p><p>IF N≠0 AND M1(Y+1,X+2)=N AND M1(Y+3,X+2)=N THEN FOR I FROM −1 TO 1 STEP 2 DO 0►M1(Y+I+2,X+2);RECT_P(X*16,(Y+I)<em>16,X</em>16+14,(Y+I)*16+14);SearchRect(X,Y+I,N);END; END;//Y</p><p>END;//X END;//Y END;</p><p>Gravity() BEGIN LOCAL X,Y,Ln,N; FOR X FROM 0 TO 11 DO Ln:={0,0,0,0,0,0,0,0};1►N; FOR Y FROM 0 TO 7 DO IF M1(7-Y+2,X+2)≠0 THEN M1(7-Y+2,X+2)►Ln(N);N:=N+1; END; END;//Y FOR Y FROM 0 TO 7 DO M1(9-Y,X+2):=Ln(Y+1); DrawRect(G0,X*16,(7-Y)*16,Ln(Y+1)); END;</p><p>END;//X END;</p><p>EXPORT XXL() BEGINLOCAL X,Y,I,N,on; RECT; IF GROBW_P(G1)≠64 THEN DIMGROB(G1,10.4,8.2);BLOAD(G1,0,0,Lm);END; REDIM(M1,{10,14}); FOR Y FROM 0 TO 7 DO FOR X FROM 0 TO 11 DO N:=INT(RANDOM(1,5)); M1(Y+2,X+2):=N; DrawRect(G0,X<em>16,Y</em>16,N); END; END; 0►X;0►Y;0►N; WHILE 1 DO I:=I+1;</p><p>K:=GETKEY; IF K==0 THEN KillRect()END; IF K==1 THEN Gravity()END; IF ISKEYDOWN(14) OR ISKEYDOWN(10) OR ISKEYDOWN(9) OR ISKEYDOWN(15) THEN on:=on+1; IF on≥48 AND I MOD 16=0 OR on=1 THEN IF N MOD 2=1 THEN INVERT_P(X<em>16,Y</em>16,X<em>16+14,Y</em>16+14); N:=0;END; X:=X-ISKEYDOWN(14)+ISKEYDOWN(10); Y:=Y-ISKEYDOWN(9)+ISKEYDOWN(15); I:=48;END;ELSE on:=0;END;</p><p>IF I MOD 48==0 THEN N:=N+1; INVERT_P(X<em>16,Y</em>16,X<em>16+14,Y</em>16+14);END; WAIT(0.01); END;</p><p>END;</p>",14)]))}const M=E(I,[["render",Y]]);export{c as __pageData,M as default};
